

~~~~{.julia}
using Plots
pyplot()
x = linspace(0, 2*pi)
println(x)

~~~~~~~~~~~~~


~~~~
linspace(0.0,6.283185307179586,50)
~~~~



~~~~{.julia}
p = plot(x = x, y = sin(x), size =(900,300))
~~~~~~~~~~~~~


~~~~
[Plots.jl] Initializing backend: pyplot
~~~~






~~~~{.julia}
julia> plot(x = x, y = sin(x))
Plot{Plots.PyPlotBackend() n=1}
~~~~~~~~~~~~~


![](figures/plotsjl_test_2_1.png)\ 




~~~~{.julia}
plot(rand(100) / 3,reg=true,fill=(0,:green))
scatter!(rand(100),markersize=6,c=:orange)
~~~~~~~~~~~~~


![](figures/plotsjl_test_3_1.png)\ 




~~~~{.julia}
julia> plot(rand(100) / 3,reg=true,fill=(0,:green))

Plot{Plots.PyPlotBackend() n=1}
~~~~~~~~~~~~~


![](figures/plotsjl_test_4_1.png)\ 


~~~~{.julia}
julia> scatter!(rand(100),markersize=6,c=:orange)
Plot{Plots.PyPlotBackend() n=2}
~~~~~~~~~~~~~


![](figures/plotsjl_test_4_2.png)\ 





![A random walk.](figures/plotsjl_test_random_1.png)
